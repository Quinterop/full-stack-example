{"ast":null,"code":"import { User } from './../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UserformComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userType_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", userType_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(userType_r1.name);\n  }\n}\nexport class UserformComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.finalUser = new User();\n    this.userTypes = [];\n    if (this.selectedUser == null) {\n      this.name = \"\";\n      this.firstName = \"\";\n      this.email = \"\";\n      this.selectedType = null;\n    } else {\n      this.name = this.selectedUser.name;\n      this.firstName = this.selectedUser.firstName;\n      this.email = this.selectedUser.email;\n      this.selectedType = this.selectedUser.type;\n    }\n  }\n  ngOnInit() {\n    this.userService.getUserTypes().subscribe(data => {\n      this.userTypes = data;\n      console.log(this.selectedUser?.name); ////\n    });\n  }\n\n  onSubmit() {\n    this.finalUser.name = this.name;\n    this.finalUser.firstName = this.firstName;\n    this.finalUser.email = this.email;\n    this.finalUser.type = this.selectedType;\n    //this.userService.saveUser(this.finalUser);\n    console.log(\"User saved: \" + this.finalUser.name + \" \" + this.finalUser.firstName + \" \" + this.finalUser.email + \" \" + this.finalUser.type?.name + \" \" + this.finalUser.type?.description + \"\");\n    console.log(this.selectedType?.name + \" \" + this.selectedType?.description + this.selectedType);\n  }\n}\nUserformComponent.ɵfac = function UserformComponent_Factory(t) {\n  return new (t || UserformComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService));\n};\nUserformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserformComponent,\n  selectors: [[\"app-userform\"]],\n  decls: 20,\n  vars: 5,\n  consts: [[1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter name\", \"name\", \"name1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"placeholder\", \"Enter Fname\", \"name\", \"name2\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"name\", \"mail\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"typ\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"ngValue\"]],\n  template: function UserformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 0)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"First name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 0)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_select_ngModelChange_16_listener($event) {\n        return ctx.selectedType = $event;\n      });\n      i0.ɵɵtemplate(17, UserformComponent_option_17_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function UserformComponent_Template_button_click_18_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(19, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userTypes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["User","i0","UserformComponent","constructor","userService","finalUser","userTypes","selectedUser","name","firstName","email","selectedType","type","ngOnInit","getUserTypes","subscribe","data","console","log","onSubmit","description","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\forma\\Final\\fullstacktest\\front\\fullstapp\\src\\app\\userform\\userform.component.ts","D:\\forma\\Final\\fullstacktest\\front\\fullstapp\\src\\app\\userform\\userform.component.html"],"sourcesContent":["import { UserType } from './../user-type';\nimport { User } from './../user';\nimport { Component } from '@angular/core';\nimport { UserServiceService } from '../user-service.service';\nimport { FormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-userform',\n  templateUrl: './userform.component.html',\n  styleUrls: ['./userform.component.css']\n})\nexport class UserformComponent {\n  selectedUser?: User;\n  finalUser: User;\n  userTypes: UserType[];\n  \n  name: string;\n  firstName: string;\n  email: string;\n  selectedType: UserType | null;\n  \n  constructor(public userService: UserServiceService) {\n    \n    this.finalUser = new User();\n    this.userTypes = [];\n    \n    if(this.selectedUser == null){\n      \n      this.name = \"\";\n      this.firstName = \"\";\n      this.email = \"\";\n      this.selectedType = null;\n    }else{  \n      this.name = this.selectedUser.name;\n      this.firstName = this.selectedUser.firstName;\n      this.email = this.selectedUser.email;\n      this.selectedType = this.selectedUser.type;\n    }\n  }\n  \n  ngOnInit() {\n    this.userService.getUserTypes().subscribe((data: UserType[]) => {\n      this.userTypes = data;\n      console.log(this.selectedUser?.name); ////\n    });\n  }\n  \n  onSubmit(){\n    this.finalUser.name = this.name;\n    this.finalUser.firstName = this.firstName;\n    this.finalUser.email = this.email;\n    this.finalUser.type = this.selectedType;\n    //this.userService.saveUser(this.finalUser);\n    \n    console.log(\"User saved: \"+this.finalUser.name+\" \"+this.finalUser.firstName+\" \"+this.finalUser.email+\" \"+this.finalUser.type?.name+\" \"+this.finalUser.type?.description+\"\")\n    console.log(this.selectedType?.name+\" \"+this.selectedType?.description+ this.selectedType)\n  }\n  \n}\n","<form>\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter name\"\n         [(ngModel)]=\"name\" name=\"name1\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"phone\">First name</label>\n        <input type=\"text\" class=\"form-control\" id=\"phone\" placeholder=\"Enter Fname\"\n          [(ngModel)]=\"firstName\" name=\"name2\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"email\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\"\n          [(ngModel)]=\"email\" name=\"mail\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"type\">Type</label>\n        <select class=\"form-control\" id=\"type\" name=\"typ\" [(ngModel)]=\"selectedType\"> \n\n            <option *ngFor=\"let userType of userTypes\" [ngValue]=\"userType\" >{{userType.name}}</option>       \n       \n        </select>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Save</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
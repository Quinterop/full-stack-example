{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserServiceService {\n  constructor(http) {\n    this.http = http;\n    this.Url = 'http://localhost:8080/';\n  }\n  saveUser(user) {\n    this.http.post(this.Url + \"userForm\", user);\n  }\n  getUsers() {\n    return this.http.get(this.Url + \"users\");\n  }\n  getUserTypes() {\n    return this.http.get(this.Url + \"types\");\n  }\n}\nUserServiceService.ɵfac = function UserServiceService_Factory(t) {\n  return new (t || UserServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserServiceService,\n  factory: UserServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,GAAG,GAAG,wBAAwB;EACrC;EAEOC,QAAQ,CAACC,IAAU;IACxB,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,GAAG,GAAC,UAAU,EAACE,IAAI,CAAC;EAChD;EAEOE,QAAQ;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,GAAG,GAAC,OAAO,CAAC;EAChD;EAEOM,YAAY;IACjB,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAa,IAAI,CAACL,GAAG,GAAC,OAAO,CAAC;EACpD;;AAlBWH,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAU,SAAlBV,kBAAkB;EAAAW,YAFjB;AAAM","names":["UserServiceService","constructor","http","Url","saveUser","user","post","getUsers","get","getUserTypes","factory","providedIn"],"sourceRoot":"","sources":["D:\\forma\\Final\\fullstacktest\\front\\fullstapp\\src\\app\\user-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserType } from './user-type';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n  \n  Url:string;\n\n  constructor(private http:HttpClient) { \n    this.Url = 'http://localhost:8080/';\n  }\n  \n  public saveUser(user: User) {\n    this.http.post<User>(this.Url+\"userForm\",user);\n  }\n\n  public getUsers() {\n    return this.http.get<User[]>(this.Url+\"users\");\n  }\n\n  public getUserTypes() {\n    return this.http.get<UserType[]>(this.Url+\"types\");\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
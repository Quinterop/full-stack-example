{"ast":null,"code":"import { UserType } from './../user-type';\nimport { User } from './../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserformComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userType_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", userType_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(userType_r1.name);\n  }\n}\nconst _c0 = function () {\n  return [\"/users\"];\n};\nexport class UserformComponent {\n  constructor(userService, route) {\n    this.userService = userService;\n    this.route = route;\n    this.selectedType = new UserType();\n    this.finalUser = new User();\n    this.userTypes = [];\n    if (this.selectedUser == null) {\n      this.name = \"\";\n      this.firstName = \"\";\n      this.email = \"\";\n    } else {\n      this.name = this.selectedUser.name;\n      this.firstName = this.selectedUser.firstName;\n      this.email = this.selectedUser.email;\n      if (this.selectedUser.type != null) this.selectedType = this.selectedUser.type;\n    }\n  }\n  ngOnInit() {\n    this.userService.getUserTypes().subscribe(data => {\n      this.userTypes = data;\n    });\n    this.route.queryParams.subscribe(params => {\n      const id = params['id'];\n      if (id) {\n        this.userService.getUsers().subscribe(data => {\n          this.selectedUser = data.find(u => u.id == id);\n          //console.log(id);\n          if (this.selectedUser) {\n            this.name = this.selectedUser.name;\n            this.firstName = this.selectedUser.firstName;\n            this.email = this.selectedUser.email;\n            if (this.selectedUser.type != null) this.selectedType = this.selectedUser.type;\n          }\n        });\n      }\n    });\n    this.userService.getUserTypes().subscribe(data => {\n      this.userTypes = data;\n    });\n  }\n  onSubmit() {\n    this.finalUser.name = this.name;\n    this.finalUser.firstName = this.firstName;\n    this.finalUser.email = this.email;\n    this.finalUser.type = this.selectedType;\n    if (this.selectedUser == null) {\n      this.userService.saveUser(this.finalUser);\n    } else {\n      this.userService.updateUser(this.finalUser, this.selectedUser.id);\n      // console.log(\"User saved: \"+this.finalUser.name+\" \"+this.finalUser.firstName+\" \"+this.finalUser.email+\" \"+this.finalUser.type?.name+\" \"+this.finalUser.type?.description+\"\")\n      // console.log(this.selectedType?.name+\" \"+this.selectedType?.description+ this.selectedType)\n    }\n  }\n}\n\nUserformComponent.ɵfac = function UserformComponent_Factory(t) {\n  return new (t || UserformComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUserformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserformComponent,\n  selectors: [[\"app-userform\"]],\n  decls: 20,\n  vars: 7,\n  consts: [[1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter name\", \"name\", \"name1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"placeholder\", \"Enter Fname\", \"name\", \"name2\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"name\", \"mail\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"typ\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\", \"click\"], [3, \"value\"]],\n  template: function UserformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 0)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"First name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 0)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_select_ngModelChange_16_listener($event) {\n        return ctx.selectedType.name = $event;\n      });\n      i0.ɵɵtemplate(17, UserformComponent_option_17_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function UserformComponent_Template_button_click_18_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(19, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedType.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userTypes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["UserType","User","i0","UserformComponent","constructor","userService","route","selectedType","finalUser","userTypes","selectedUser","name","firstName","email","type","ngOnInit","getUserTypes","subscribe","data","queryParams","params","id","getUsers","find","u","onSubmit","saveUser","updateUser","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\forma\\Final\\fullstacktest\\front\\fullstapp\\src\\app\\userform\\userform.component.ts","D:\\forma\\Final\\fullstacktest\\front\\fullstapp\\src\\app\\userform\\userform.component.html"],"sourcesContent":["import { UserType } from './../user-type';\nimport { User } from './../user';\nimport { Component } from '@angular/core';\nimport { UserServiceService } from '../user-service.service';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-userform',\n  templateUrl: './userform.component.html',\n  styleUrls: ['./userform.component.css']\n})\nexport class UserformComponent {\n  selectedUser?: User;\n  finalUser: User;\n  userTypes: UserType[];\n  \n  name: string;\n  firstName: string;\n  email: string;\n  selectedType: UserType;\n  \n  constructor(public userService: UserServiceService, private route: ActivatedRoute) {\n    this.selectedType = new UserType();\n    this.finalUser = new User();\n    this.userTypes = [];\n    \n    if(this.selectedUser == null){\n      \n      this.name = \"\";\n      this.firstName = \"\";\n      this.email = \"\";\n      \n    }else{  \n      this.name = this.selectedUser.name;\n      this.firstName = this.selectedUser.firstName;\n      this.email = this.selectedUser.email;\n      if(this.selectedUser.type != null)\n      this.selectedType = this.selectedUser.type;\n    }\n  }\n  \n  ngOnInit() {\n    this.userService.getUserTypes().subscribe((data: UserType[]) => {\n      this.userTypes = data;\n    });\n    this.route.queryParams.subscribe(params => {\n      const id = params['id'];\n      if(id) {\n\n        this.userService.getUsers().subscribe((data: User[]) => {\n          this.selectedUser = data.find(u => u.id == id);\n          //console.log(id);\n\n\n          if(this.selectedUser){\n          this.name = this.selectedUser.name;\n          this.firstName = this.selectedUser.firstName;\n          this.email = this.selectedUser.email;\n          if(this.selectedUser.type != null)\n          this.selectedType = this.selectedUser.type;\n          }\n        });\n      }\n    });\n    this.userService.getUserTypes().subscribe((data: UserType[]) => {\n      this.userTypes = data;\n    });\n  }\n  \n  onSubmit(){\n    this.finalUser.name = this.name;\n    this.finalUser.firstName = this.firstName;\n    this.finalUser.email = this.email;\n    this.finalUser.type = this.selectedType;\n    if(this.selectedUser == null){\n      this.userService.saveUser(this.finalUser);\n    }else{\n      this.userService.updateUser(this.finalUser,this.selectedUser.id);\n      \n      // console.log(\"User saved: \"+this.finalUser.name+\" \"+this.finalUser.firstName+\" \"+this.finalUser.email+\" \"+this.finalUser.type?.name+\" \"+this.finalUser.type?.description+\"\")\n      // console.log(this.selectedType?.name+\" \"+this.selectedType?.description+ this.selectedType)\n    }\n    \n  }\n}\n","<form>\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter name\"\n        [(ngModel)]=\"name\" name=\"name1\">\n    </div>\n    \n    <div class=\"form-group\">\n        <label for=\"phone\">First name</label>\n        <input type=\"text\" class=\"form-control\" id=\"phone\" placeholder=\"Enter Fname\"\n        [(ngModel)]=\"firstName\" name=\"name2\">\n    </div>\n    \n    <div class=\"form-group\">\n        <label for=\"email\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\"\n        [(ngModel)]=\"email\" name=\"mail\">\n    </div>\n    \n    <div class=\"form-group\">\n        <label for=\"type\">Type</label>\n        <select class=\"form-control\" id=\"type\" name=\"typ\" [(ngModel)]=\"selectedType.name\"> \n            <option *ngFor=\"let userType of userTypes\" [value]=\"userType.name\" >{{userType.name}}</option>       \n        </select>  \n    </div>\n    \n    \n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [routerLink]=\"['/users']\">Save</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
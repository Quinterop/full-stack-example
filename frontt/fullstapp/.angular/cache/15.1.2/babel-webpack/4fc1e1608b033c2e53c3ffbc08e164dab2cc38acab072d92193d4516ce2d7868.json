{"ast":null,"code":"import { UserType } from './../user-type';\nimport { User } from './../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserformComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const userType_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", userType_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(userType_r1.name);\n  }\n}\nconst _c0 = function () {\n  return [\"/users\"];\n};\nexport class UserformComponent {\n  constructor(userService, route) {\n    this.userService = userService;\n    this.route = route;\n    this.selectedType = new UserType();\n    this.finalUser = new User();\n    this.userTypes = [];\n    if (this.selectedUser == null) {\n      this.name = \"\";\n      this.firstName = \"\";\n      this.email = \"\";\n    } else {\n      this.name = this.selectedUser.name;\n      this.firstName = this.selectedUser.firstName;\n      this.email = this.selectedUser.email;\n      if (this.selectedUser.type != null) this.selectedType = this.selectedUser.type;\n    }\n  }\n  ngOnInit() {\n    this.userService.getUserTypes().subscribe(data => {\n      this.userTypes = data;\n    });\n    this.route.queryParams.subscribe(params => {\n      const id = params['id'];\n      if (id) {\n        this.userService.getUsers().subscribe(data => {\n          this.selectedUser = data.find(u => u.id == id);\n          //console.log(id);\n          if (this.selectedUser) {\n            this.name = this.selectedUser.name;\n            this.firstName = this.selectedUser.firstName;\n            this.email = this.selectedUser.email;\n            if (this.selectedUser.type != null) this.selectedType = this.selectedUser.type;\n          }\n        });\n      }\n    });\n    this.userService.getUserTypes().subscribe(data => {\n      this.userTypes = data;\n    });\n  }\n  onSubmit() {\n    this.finalUser.name = this.name;\n    this.finalUser.firstName = this.firstName;\n    this.finalUser.email = this.email;\n    this.finalUser.type = this.selectedType;\n    if (this.selectedUser == null) {\n      this.userService.saveUser(this.finalUser);\n    } else {\n      this.userService.updateUser(this.finalUser, this.selectedUser.id);\n      // console.log(\"User saved: \"+this.finalUser.name+\" \"+this.finalUser.firstName+\" \"+this.finalUser.email+\" \"+this.finalUser.type?.name+\" \"+this.finalUser.type?.description+\"\")\n      // console.log(this.selectedType?.name+\" \"+this.selectedType?.description+ this.selectedType)\n    }\n  }\n}\n\nUserformComponent.ɵfac = function UserformComponent_Factory(t) {\n  return new (t || UserformComponent)(i0.ɵɵdirectiveInject(i1.UserServiceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUserformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserformComponent,\n  selectors: [[\"app-userform\"]],\n  decls: 23,\n  vars: 7,\n  consts: [[1, \"top\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter name\", \"name\", \"name1\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"placeholder\", \"Enter Fname\", \"name\", \"name2\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"name\", \"mail\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"typ\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"routerLink\", \"click\"], [3, \"value\"]],\n  template: function UserformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Add / Edit an User\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n      i0.ɵɵtext(10, \"First name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function UserformComponent_Template_select_ngModelChange_19_listener($event) {\n        return ctx.selectedType.name = $event;\n      });\n      i0.ɵɵtemplate(20, UserformComponent_option_20_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function UserformComponent_Template_button_click_21_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(22, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedType.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userTypes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}